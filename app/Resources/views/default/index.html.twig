{% extends 'base.html.twig' %}

{% block header %}
	<h1>Witaj <strong>{{ user_FN }} {{ user_LN }}</strong>!</h1>
	
	<ul class="actions">
	{% if app.user and is_granted('ROLE_ADMIN') %}
		<li><a href="#three" class="button scrolly">Opcje administratora</a></li>
	{% endif %}
		<li><a href="#one" class="button scrolly">Lista zadań</a></li>
		<li><a href="{{ path('logout') }}" class="button scrolly">Wyloguj się</a></li>
	</ul>
{% endblock %}

{% block bodyEnd %}
	<div id="addCategoryDialog" title="Dodaj kategorię">
		<form onSubmit="return onAddCategory();" class="ignorecss">
			<label for="cat_name" class="ignorecss">Nazwa</label><input type="text" id="cat_name" name="cat_name" class="ignorecss" />
			<input type="submit" value="Dodaj" class="ignorecss" />
		</form>
	</div>
{% endblock %}

{% block sectionOne %}
	<script>
		function onAddCategory()
		{
			if($("#cat_name").val() == "")
			{
				alert("Musisz podać nazwę kategorii.");
				return false;
			}
			
			$.ajax({
				type: "POST",
				url: "{{ path('user_addcategory') }}",
				data: {
					cat_name: $("#cat_name").val()
				},
				success: function(r) {
					if(r == "ALREADY_EXISTS")
						alert('Wybrana nazwa kategorii już istnieje, proszę podać inną.');
					else if(isNaN(r))
						alert("Wystąpił nieznany błąd.");
					else
					{
						alert("Kategoria została dodana.");
						$("#catTable").append("<tr><td>" + r + "</td><td>" + $("#cat_name").val() + "</td><td><a href='javascript:showTasks(" + r + ");'>Zobacz</a></td>{% if is_granted('ROLE_ADMIN') %}<td><a href='javascript:removeCategory(" + r + ");'>Usuń</a></td>{% endif %}</tr>");
					}
				},
				error: function(err) {
					alert("Nie można dodać nowej kategorii.");
				}
			}).always(function() {
				$("#addCategoryDialog").dialog("close");
				$("#cat_name").val("");
			});
			return false;
		}
		
		function addCategory()
		{
			$("#addCategoryDialog").dialog("open");
		}
		
		{% if is_granted('ROLE_ADMIN') %}
			function removeCategory(id)
			{
				$.ajax({
					type: "POST",
					url: "{{ path('user_remcategory') }}",
					data: {
						id: id
					},
					success: function(r) {
						if(r == "NOT_FOUND")
							alert('Wybrana kategoria musiała zostać usunięta wcześniej, gdyż nie została znaleziona.');
						else if(isNaN(r))
							alert("Wystąpił nieznany błąd.");
						else
						{
							alert("Kategoria została usunięta.");
							$("#cat" + r + "Tr").remove();
						}
					},
					error: function(err) {
						alert("Nie można usunąć nowej kategorii.");
					}
				});
			}
		{% endif %}
	
	</script>
	<div class="row 150%">
		<div class="6u 12u$(medium)">
			<header class="major">
				<h2>Lista kategorii</h2>
				<h5><button onClick="javascript:addCategory();">Dodaj kategorię</button></h5>
			</header>
			<table id="catTable">
				<tr><th>ID</th><th>Nazwa</th><th>Zadania</th>{% if is_granted('ROLE_ADMIN') %}<th>Usuń kategorię</th>{% endif %}</tr>
				{% for category in categories %}
					<tr id="cat{{ category.id }}Tr">
						<td>{{ category.id }}</td>
						<td>{{ category.name }}</td>
						<td><a href="javascript:showTasks({{ category.id }});">Zobacz</a></td>
						{% if is_granted('ROLE_ADMIN') %}
							<td><a href="javascript:removeCategory({{ category.id }});">Usuń</a></td>
						{% endif %}
					</tr>
				{% endfor %}
			</table>
		</div>
	</div>
{% endblock %}

{% block sectionTwo %}
	<div id="showtaskwnd" title="Szczegóły zadania" class="ignorecss">
		Nazwa zadania: <span style="font-weight:bold;" id="showtaskwnd_name" class="ignorecss"></span></span><br />
		Opis zadania: <textarea id="showtaskwnd_descr" class="ignorecss" disabled="disabled"></textarea>
		Data zakończenia: <span style="font-weight:bold;" id="showtaskwnd_endtime" class="ignorecss"></span></span><br />
		Priorytet: <span style="font-weight:bold;" id="showtaskwnd_priority" class="ignorecss"></span><br />
		Zakończone: <span class="ignorecss" style="font-weight:bold;" id="showtaskwnd_ended">tak</span><br />
	</div>
	<script>
		var currCategory = -1;
		var currPage = 1;
		var currTasks = [];
		
		function getDateFromString(str)
		{
			str = str.substr(0, str.indexOf(' '));
			var res = str.split('-');
			return res[2] + '.' + res[1] + '.' + res[0];
		}
		
		function showTask(id)
		{
			$("#showtaskwnd").dialog("open");
			var task = currTasks[id];
			$("#showtaskwnd_name").html(task.name)
			$("#showtaskwnd_descr").html(task.description);
			$("#showtaskwnd_endtime").html(getDateFromString(task.endtime.date));
			$("#showtaskwnd_ended").html(task.ended ? "tak" : "nie");
			$("#showtaskwnd_priority").html(task.priority);
		}
		
		function showTasks(id)
		{
			$.ajax({
				type: "POST",
				url: "/gettasks/" + id + "/1/name/ASC",
				success: function(r) {
					if(r.pages < 1)
					{
						//alert("Nie ma żadnych zadań w wybranej kategorii.");
						$("#addtaskbn").show();
						currPage = 1;
						currCategory = id;
						$("#taskshere").html("Brak zadań w wybranej kategorii.");
						$('html,body').animate({
						  scrollTop: $("#two").offset().top
						}, 1000);
					}
					else
					{
						//alert("Printing...");
						$("#addtaskbn").show();
						currPage = 1;
						currCategory = id;
						currTasks = [];
						
						var t = $("<table></table>");
						t.html('<tr><th>ID</th><th>Nazwa</th><th>Data zakończenia</th><th>Priorytet</th><th>Szczegóły</th></tr>');
						for(var i = 0; i < r.data.length; i++)
						{
							var tr = $("<tr></tr>");
							tr.html('<td>' + r.data[i].id + '</td><td>' + r.data[i].name + '</td><td>' + getDateFromString(r.data[i].endtime.date) + '</td><td>' + r.data[i].priority + '</td><td><a href="javascript:showTask('+i+');">Zobacz</a></td>');
							currTasks[i] = r.data[i];
							t.append(tr);
						}
						
						$("#taskshere").html("").append(t);
						
						$('html,body').animate({
							scrollTop: $("#two").offset().top
						}, 1000);
					}
				},
				error: function(err) {
					//alert("Nie można pobrać listy zadań.");
					currCategory = -1;
					currPage = 1;
					$("#taskshere").html('Musisz wybrać kategorię na liście <a href="#one" class="scrolly">wyżej</a>.');
					$("#addtaskbn").hide();
					document.location = "#two";
				}
			});
		}
	</script>
	<div class="row 150%">
		<div class="6u 12u$(medium)">
			<header class="major">
				<h2>Lista Zadań</h2>
				<h5><button onClick="javascript:addTask();" id="addtaskbn">Dodaj zadanie</button></h5>
			</header>
			<div id="taskshere">
				Musisz wybrać kategorię na liście <a href="#one" class="scrolly">wyżej</a>.
			</div>
		</div>
	</div>
{% endblock %}

{% block sectionThree %}{% if app.user and is_granted('ROLE_ADMIN') %}
		<script>
			function editUser(userid)
			{
				$("#loading_admin").show();
				$.ajax("/getuser/" + userid).done(function(r) {
					$("#uid").val(r.id);
					$("#ufirst").val(r.first);
					$("#ulast").val(r.last);
					$("#uemail").val(r.email);
					$("#uactive").prop("checked", r.isactive);
					$("#uaccess").prop("checked", r.isadmin);
				}).always(function() {
					$("#loading_admin").hide();
				});
			
			}
			
			function onSubmit()
			{
				if($("#uid").val() == "")
				{
					alert("Musisz wybrać użytkownika, którego chcesz zaktualizować...");
					return false;
				}
				if(confirm("Czy na pewno chcesz zaktualizować tego użytkownika?"))
				{
					$("#loading_admin").show();
					$.ajax({
						type: "POST",
						url: "{{ path('admin_setuser') }}",
						data: {
							id: parseInt($("#uid").val()),
							first: $("#ufirst").val(),
							last: $("#ulast").val(),
							email: $("#uemail").val(),
							pass: $("#upass").val(),
							active: $("#uactive").prop("checked") ? 1 : 0,
							access: $("#uaccess").prop("checked") ? 1 : 0
						},
						success: function(r) {
							if(r != "OK")
								alert(r);
						},
						error: function(err) {
							alert("Nie można zaktualizować danych użytkownika.");
						}
					}).always(function() {
						$("#loading_admin").hide();
						$("#upass").val("");
					});
				}
				return false;
			}
		</script>
	
		<div class="row 150%">
			<div class="6u 12u$(medium)">
				<header class="major">
					<h2>Lista użytkowników</h2>
				</header>
				<table>
					<tr>
						<th>ID</th>
						<th>Imię i Nazwisko</th>
						<th>Email</th>
						<th>Edycja</th>
					</tr>
					{% for user in users %}
						<tr>
							<td>{{ user.id }}</td>
							<td>{{ user.firstName }} {{ user.lastName }}</td>
							<td>{{ user.email }}</td>
							<td>
							{% if app.user.id != user.id %}
								<a href="javascript:editUser({{ user.id }});">Edytuj</a>
							{% endif %}
							</td>
						</tr>
					{% endfor %}
				</table>
			</div>
			<div class="6u$ 12u$(medium)">
				<form onSubmit="return onSubmit();">
					<label for="uid" style="font-size: initial;">ID</label>
					<input type="number" id="uid" name="uid" value="" disabled="disabled" style="font-size: initial;" />
					<img id="loading_admin" src="{{ asset('images/loader.gif') }}" style="display: none; width: 32px; height: 32px;" />
					<label for="ufirst" style="font-size: initial;">Imię</label>
					<input type="text" style="font-size: initial;" value="" id="ufirst" name="ufirst" />
					<label for="ulast" style="font-size: initial;">Nazwisko</label>
					<input type="text" style="font-size: initial;" value="" id="ulast" name="ulast" />
					<label for="uemail" style="font-size: initial;">Email</label>
					<input type="text" style="font-size: initial;" value="" id="uemail" name="uemail" />
					<label for="upass" style="font-size: initial;">Hasło</label>
					<input type="text" style="font-size: initial;" value="" id="upass" name="upass" />
					<br />
					<input type="checkbox" id="uactive" name="uactive" checked="checked" /><label for="uactive" style="font-size: initial;">Czy konto jest aktywne?</label>
					<input type="checkbox" id="uaccess" name="uaccess" /><label for="uaccess" style="font-size: initial;">Czy jest adminem?</label>
					<br />
					<input type="submit" value="Aktualizuj" style="font-size: initial;" />
				</form>
			</div>
		</div>
	
{% endif %}{% endblock %}

{% block headScript %}
<script>
	$(function()
	{
		$("#addCategoryDialog").dialog({
			autoOpen: false,
			show: {
				effect: "blind",
				duration: 1000
			},
			hide: {
				effect: "blind",
				duration: 1000
			}
		});
		$("#showtaskwnd").dialog({
			autoOpen: false,
			minWidth: 400,
			show: {
				effect: "blind",
				duration: 1000
			},
			hide: {
				effect: "blind",
				duration: 1000
			}
		});
		$("#addtaskbn").hide();
	});
</script>
{% endblock %}